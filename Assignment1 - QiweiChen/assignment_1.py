# -*- coding: utf-8 -*-
"""Assignment_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1puAkG1TPI2iqdJ9RAQxG4IEumncCGI3N
"""

!sudo apt install tesseract-ocr libtesseract-dev
!pip -q install pytesseract

# Download the test image and utils files
!wget https://nanonets.com/blog/content/images/2019/12/invoice-sample.jpg -O image.jpg
!wget https://nanonets.com/blog/content/images/2019/12/greek-thai.png

# These imports let you use opencv
import cv2 #opencv itself
import numpy as np #matrix manipulations
import pytesseract

#show the image
img = cv2.imread('image.jpg')
cv2_imshow(img)

# get grayscale image
def get_grayscale(image):
    return cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

#thresholding
def thresholding(image):
    return cv2.threshold(image, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)[1]

#identify the image, gray image and thresh image
image = cv2.imread('image.jpg')

gray = get_grayscale(image)
thresh = thresholding(gray)

#this is only for google colab, the original is cv2.imshow()
from google.colab.patches import cv2_imshow

#show the gray image
img = gray
cv2_imshow(img)

#getting boxes around text
n_boxes = len(d['text'])
for i in range(n_boxes):
    if int(d['conf'][i]) > 60:
        (x, y, w, h) = (d['left'][i], d['top'][i], d['width'][i], d['height'][i])
        img = cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)

cv2_imshow(img)
cv2.waitKey(0)

#show the thresh image
img = thresh
cv2_imshow(img)

# Adding custom options
custom_config = r'-l eng --psm 6'
pytesseract.image_to_string(img, config=custom_config)